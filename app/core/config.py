from pydantic_settings import BaseSettings
from typing import List
import os


class Settings(BaseSettings):
    # Database - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
    database_url: str = None
    
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        # –ï—Å–ª–∏ DATABASE_URL –Ω–µ –∑–∞–¥–∞–Ω, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        if not self.database_url:
            # –í Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ö–æ—Å—Ç 'db'
            # –í –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º 'localhost'
            if os.getenv('DOCKER_CONTAINER') == '1' or os.path.exists('/.dockerenv'):
                host = 'db'
                print(f"üê≥ Docker environment detected, using host: {host}")
            else:
                host = 'localhost'
                print(f"üíª Local environment detected, using host: {host}")
            
            postgres_password = os.getenv('POSTGRES_PASSWORD', 'tprep_password')
            self.database_url = f"postgresql://tprep_user:{postgres_password}@{host}:5432/tprep_db"
            print(f"üîó Database URL: {self.database_url}")
    
    # JWT
    secret_key: str = "your-secret-key-here-change-in-production"
    algorithm: str = "HS256"
    access_token_expire_minutes: int = 30
    
    # Google OAuth
    google_client_id: str = "your-google-client-id"
    google_client_secret: str = "your-google-client-secret"
    google_redirect_uri: str = "http://localhost:8000/api/v1/auth/google/callback"
    
    # Android OAuth (for mobile app)
    android_client_id: str = "your-android-client-id"
    
    # App settings
    debug: bool = True
    allowed_origins: str = "*"  # CORS origins, can be comma-separated
    
    model_config = {
        "env_file": ".env",
        "case_sensitive": False,
        "extra": "ignore"  # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–æ–ª—è
    }


settings = Settings()
