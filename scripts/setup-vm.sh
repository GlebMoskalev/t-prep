#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Ubuntu VM –¥–ª—è T-Prep

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Ubuntu VM –¥–ª—è T-Prep..."

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
sudo apt install -y \
    curl \
    wget \
    git \
    docker.io \
    docker-compose \
    nginx \
    certbot \
    python3-certbot-nginx \
    htop \
    nano \
    ufw \
    fail2ban

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker
echo "üê≥ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker..."
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -aG docker $USER

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
sudo mkdir -p /opt/t-prep
sudo chown $USER:$USER /opt/t-prep

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL)
echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
cd /opt/t-prep
if [ ! -d ".git" ]; then
    echo "–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
    read REPO_URL
    git clone $REPO_URL .
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
echo "‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
if [ ! -f .env ]; then
    cp env.example .env
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ env.example"
    echo "   –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!"
    echo "   –ü—Ä–∏ –¥–µ–ø–ª–æ–µ —á–µ—Ä–µ–∑ GitHub Actions .env –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ GitHub Secrets"
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx
echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx..."
sudo tee /etc/nginx/sites-available/t-prep << EOF
server {
    listen 80;
    server_name _;  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω
    
    # –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL)
    # return 301 https://\$server_name\$request_uri;
    
    # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ FastAPI
    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location /static/ {
        proxy_pass http://localhost:8000/static/;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
sudo ln -sf /etc/nginx/sites-available/t-prep /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default
sudo nginx -t
sudo systemctl restart nginx
sudo systemctl enable nginx

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª
echo "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª..."
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw --force enable

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º fail2ban
echo "üõ°Ô∏è  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º fail2ban..."
sudo tee /etc/fail2ban/jail.local << EOF
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 3

[sshd]
enabled = true
port = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s

[nginx-http-auth]
enabled = true
filter = nginx-http-auth
port = http,https
logpath = /var/log/nginx/error.log

[nginx-limit-req]
enabled = true
filter = nginx-limit-req
port = http,https
logpath = /var/log/nginx/error.log
maxretry = 10
EOF

sudo systemctl restart fail2ban
sudo systemctl enable fail2ban

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
echo "üîÑ –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
sudo tee /etc/systemd/system/t-prep.service << EOF
[Unit]
Description=T-Prep Application
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/t-prep
ExecStart=/usr/bin/docker compose up -d
ExecStop=/usr/bin/docker compose down
TimeoutStartSec=0
User=$USER
Group=$USER

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable t-prep

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo "üìù –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
tee /opt/t-prep/update.sh << EOF
#!/bin/bash
cd /opt/t-prep
git pull origin main || git pull origin master
docker compose pull
docker compose build --no-cache
docker compose down
docker compose up -d
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
EOF

chmod +x /opt/t-prep/update.sh

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
cd /opt/t-prep
docker compose up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
docker compose ps
curl -f http://localhost:8000/health || echo "‚ö†Ô∏è  API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"

echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VM –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ /opt/t-prep/.env"
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –≤ /etc/nginx/sites-available/t-prep"
echo "3. –ü–æ–ª—É—á–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: sudo certbot --nginx"
echo "4. –î–æ–±–∞–≤—å—Ç–µ SSH –∫–ª—é—á–∏ –≤ GitHub Secrets"
echo ""
echo "üîë –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SSH –∫–ª—é—á–µ–π –≤ GitHub:"
echo "1. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ SSH –∫–ª—é—á: ssh-keygen -t ed25519 -C 'github-actions'"
echo "2. –î–æ–±–∞–≤—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ authorized_keys –Ω–∞ VM"
echo "3. –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ GitHub Secrets –∫–∞–∫ VM_SSH_KEY"
echo ""
echo "üåê –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL:"
echo "sudo certbot --nginx -d your-domain.com"
