#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API T-Prep
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
"""

import requests
import json
from typing import Optional

BASE_URL = "http://localhost:8000"
API_BASE = f"{BASE_URL}/api/v1"

class TPrepAPITester:
    def __init__(self):
        self.session = requests.Session()
        self.token: Optional[str] = None
    
    def test_health(self):
        """–¢–µ—Å—Ç health check endpoint"""
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º health check...")
        try:
            response = self.session.get(f"{BASE_URL}/health")
            if response.status_code == 200:
                print("‚úÖ Health check –ø—Ä–æ–π–¥–µ–Ω")
                print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
            else:
                print(f"‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ health check: {e}")
    
    def test_google_auth_url(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è Google OAuth URL"""
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ Google OAuth URL...")
        try:
            response = self.session.get(f"{API_BASE}/auth/google")
            if response.status_code == 200:
                print("‚úÖ Google OAuth URL –ø–æ–ª—É—á–µ–Ω")
                auth_data = response.json()
                print(f"   URL: {auth_data.get('auth_url', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å OAuth URL: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ OAuth URL: {e}")
    
    def test_android_auth(self, id_token: str):
        """–¢–µ—Å—Ç Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
        try:
            response = self.session.post(
                f"{API_BASE}/auth/google/android",
                params={"id_token": id_token}
            )
            if response.status_code == 200:
                print("‚úÖ Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
                auth_data = response.json()
                self.token = auth_data.get("access_token")
                print(f"   –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {self.token[:20]}...")
                return True
            else:
                print(f"‚ùå Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    def test_user_info(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        if not self.token:
            print("\n‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞)")
            return
        
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...")
        try:
            headers = {"Authorization": f"Bearer {self.token}"}
            response = self.session.get(f"{API_BASE}/auth/me", headers=headers)
            if response.status_code == 200:
                print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ–ª—É—á–µ–Ω–∞")
                user_data = response.json()
                print(f"   –ò–º—è: {user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   Email: {user_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
    
    def test_modules(self):
        """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥—É–ª—è–º–∏"""
        if not self.token:
            print("\n‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –º–æ–¥—É–ª–µ–π (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞)")
            return
        
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –º–æ–¥—É–ª—è–º–∏...")
        headers = {"Authorization": f"Bearer {self.token}"}
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª—è
        try:
            module_data = {
                "name": "–¢–µ—Å—Ç–æ–≤—ã–π –º–æ–¥—É–ª—å",
                "description": "–ú–æ–¥—É–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API"
            }
            response = self.session.post(
                f"{API_BASE}/modules/",
                json=module_data,
                headers=headers
            )
            if response.status_code == 200:
                print("‚úÖ –ú–æ–¥—É–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
                module = response.json()
                module_id = module.get("id")
                print(f"   ID –º–æ–¥—É–ª—è: {module_id}")
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π
                response = self.session.get(f"{API_BASE}/modules/", headers=headers)
                if response.status_code == 200:
                    print("‚úÖ –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –ø–æ–ª—É—á–µ–Ω")
                    modules = response.json()
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥—É–ª–µ–π: {len(modules)}")
                
                return module_id
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –º–æ–¥—É–ª—è–º–∏: {e}")
        return None
    
    def test_cards(self, module_id: int):
        """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏"""
        if not self.token or not module_id:
            print("\n‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∫–∞—Ä—Ç–æ—á–µ–∫ (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ module_id)")
            return
        
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ (–º–æ–¥—É–ª—å {module_id})...")
        headers = {"Authorization": f"Bearer {self.token}"}
        
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            card_data = {
                "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ FastAPI?",
                "answer": "FastAPI - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è API –Ω–∞ Python",
                "module_id": module_id
            }
            response = self.session.post(
                f"{API_BASE}/cards/",
                json=card_data,
                headers=headers
            )
            if response.status_code == 200:
                print("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                card = response.json()
                card_id = card.get("id")
                print(f"   ID –∫–∞—Ä—Ç–æ—á–∫–∏: {card_id}")
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –º–æ–¥—É–ª—è
                response = self.session.get(
                    f"{API_BASE}/cards/module/{module_id}",
                    headers=headers
                )
                if response.status_code == 200:
                    print("‚úÖ –°–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–ª—É—á–µ–Ω")
                    cards = response.json()
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(cards)}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è T-Prep API")
    print("=" * 50)
    
    tester = TPrepAPITester()
    
    # –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
    tester.test_health()
    tester.test_google_auth_url()
    
    # –¢–µ—Å—Ç Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π ID —Ç–æ–∫–µ–Ω)
    print("\n" + "=" * 50)
    print("üì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Android –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print("1. –ü–æ–ª—É—á–∏—Ç–µ ID —Ç–æ–∫–µ–Ω –∏–∑ Google Sign-In –≤ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_api.py <id_token>")
    print("=" * 50)
    
    import sys
    if len(sys.argv) > 1:
        id_token = sys.argv[1]
        if tester.test_android_auth(id_token):
            tester.test_user_info()
            module_id = tester.test_modules()
            if module_id:
                tester.test_cards(module_id)
    else:
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π:")
        print("   python test_api.py <google_id_token>")

if __name__ == "__main__":
    main()
