services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: tprep_db
      POSTGRES_USER: tprep_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tprep_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tprep_user -d tprep_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tprep-network

  web:
    build: .
    environment:
      # Database
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-tprep_password}
      - DATABASE_URL=postgresql://tprep_user:${POSTGRES_PASSWORD:-tprep_password}@db:5432/tprep_db
      # JWT
      - SECRET_KEY=${SECRET_KEY:-your-very-secure-secret-key-here-change-in-production}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      # Google OAuth
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-your-google-client-id}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-your-google-client-secret}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-http://localhost:8000/api/v1/auth/google/callback}
      - ANDROID_CLIENT_ID=${ANDROID_CLIENT_ID:-your-android-client-id}
      # App settings
      - DEBUG=False
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tprep-network
    # Убираем порты для продакшна - используем Nginx

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.simple.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/static
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - tprep-network

  # Бэкапы базы данных
  backup:
    image: postgres:15
    environment:
      POSTGRES_DB: tprep_db
      POSTGRES_USER: tprep_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tprep_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    command: |
      sh -c '
        while true; do
          pg_dump -h db -U tprep_user tprep_db > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
          # Удаляем бэкапы старше 7 дней
          find /backups -name "backup_*.sql" -mtime +7 -delete
          sleep 86400
        done
      '
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tprep-network

volumes:
  postgres_data:

networks:
  tprep-network:
    driver: bridge
